// Code generated by protoc-gen-go. DO NOT EDIT.
// source: online_solutions.proto

package generated

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StringMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}
func (*StringMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cac331a28552c0, []int{0}
}

func (m *StringMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMessage.Unmarshal(m, b)
}
func (m *StringMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMessage.Marshal(b, m, deterministic)
}
func (m *StringMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMessage.Merge(m, src)
}
func (m *StringMessage) XXX_Size() int {
	return xxx_messageInfo_StringMessage.Size(m)
}
func (m *StringMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StringMessage proto.InternalMessageInfo

func (m *StringMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*StringMessage)(nil), "generated.StringMessage")
}

func init() { proto.RegisterFile("online_solutions.proto", fileDescriptor_c3cac331a28552c0) }

var fileDescriptor_c3cac331a28552c0 = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xcf, 0xcb, 0xc9,
	0xcc, 0x4b, 0x8d, 0x2f, 0xce, 0xcf, 0x29, 0x2d, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x4d, 0x91, 0x92, 0x49,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49,
	0x44, 0x52, 0xa8, 0xa4, 0xca, 0xc5, 0x1b, 0x5c, 0x52, 0x94, 0x99, 0x97, 0xee, 0x9b, 0x5a, 0x5c,
	0x9c, 0x98, 0x9e, 0x2a, 0x24, 0xc2, 0xc5, 0x5a, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x18, 0x65, 0x71, 0xf1, 0xfb, 0x83, 0x6d, 0x0a, 0x86, 0x59, 0x24,
	0x14, 0xce, 0xc5, 0xe2, 0x9a, 0x9c, 0x91, 0x2f, 0x24, 0xa1, 0x07, 0xb7, 0x4b, 0x0f, 0xc5, 0x28,
	0x29, 0x9c, 0x32, 0x4a, 0xd2, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x55, 0x12, 0xd0, 0x2f, 0x33,
	0xd4, 0x4f, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x4f, 0x4d, 0xce, 0xc8, 0xb7, 0x62, 0xd4,
	0x4a, 0x62, 0x03, 0xbb, 0xcc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x8f, 0xb5, 0x78, 0xdc,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OnlineSolutionsClient is the client API for OnlineSolutions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnlineSolutionsClient interface {
	Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
}

type onlineSolutionsClient struct {
	cc *grpc.ClientConn
}

func NewOnlineSolutionsClient(cc *grpc.ClientConn) OnlineSolutionsClient {
	return &onlineSolutionsClient{cc}
}

func (c *onlineSolutionsClient) Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/generated.OnlineSolutions/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnlineSolutionsServer is the server API for OnlineSolutions service.
type OnlineSolutionsServer interface {
	Echo(context.Context, *StringMessage) (*StringMessage, error)
}

func RegisterOnlineSolutionsServer(s *grpc.Server, srv OnlineSolutionsServer) {
	s.RegisterService(&_OnlineSolutions_serviceDesc, srv)
}

func _OnlineSolutions_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineSolutionsServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.OnlineSolutions/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineSolutionsServer).Echo(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnlineSolutions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.OnlineSolutions",
	HandlerType: (*OnlineSolutionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _OnlineSolutions_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "online_solutions.proto",
}
